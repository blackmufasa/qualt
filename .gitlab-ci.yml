variables:
  PROJECT_NAME: qualtrics-ingestion
  NAMESPACE: etl-toolkit-${CI_ENVIRONMENT_NAME}-eda-reader
  IMAGE_URL: "${CLUSTER_REGISTRY_URL}/${NAMESPACE}/${PROJECT_NAME}"

stages:
  - lint
  - build
  - test
  - deploy

# dev dependencies don't get installed as part of the basic s2i flow, so we need to inject them ourselves
# if we want to keep the 'app image' lean
.before_script_test:
  before_script:
    - pip install -U pip
    - pip install -r dev-requirements.txt

pylint:
  stage: lint
  image: registry.access.redhat.com/ubi8/python-39
  extends: .before_script_test
  tags: 
  - openshift
  script:
    - pylint src/ --exit-zero
  rules:
    - changes:
        - "**/*.py"

bandit:
  stage: lint
  image: registry.access.redhat.com/ubi8/python-39
  extends: .before_script_test
  tags: 
  - openshift
  script:
    - bandit -r src/
  rules:
    - changes:
        - "**/*.py"


build:
  stage: build
  image: quay.io/buildah/stable:v1.23.3
  environment:
    name: stage
  tags:
    - openshift
  script: 
    - buildah --storage-driver=vfs bud --format=docker -t $IMAGE_URL
    - buildah --storage-driver=vfs push --creds "system-serviceaccount-${NAMESPACE}-pipeline:$PIPELINE_SA" --tls-verify=false ${IMAGE_URL} "docker://${IMAGE_URL}:${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHORT_SHA}"
    - buildah --storage-driver=vfs push --creds "system-serviceaccount-${NAMESPACE}-pipeline:$PIPELINE_SA" --tls-verify=false ${IMAGE_URL} "docker://${IMAGE_URL}:latest"
  rules:
    - changes:
        - Dockerfile
        - "**/*.py"

# has to run in our application image that we've built
pytest:
  stage: test
  image: "${IMAGE_URL}:${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHORT_SHA}"
  extends: .before_script_test
  environment:
    name: stage
  tags: 
  - openshift
  needs: ['build']
  script:
    - pip install .
    - coverage run -m pytest
    - coverage report
    - coverage xml
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  rules:
    - changes:
        - Dockerfile
        - "**/*.py"


pages:
  stage: deploy
  image: registry.access.redhat.com/ubi8/python-39
  extends: .before_script_test
  script:
  - sphinx-apidoc -f -o docs/source src/
  - sphinx-build -b html docs public 
  artifacts:
    paths:
    - public
  only:
  - main
  tags:
  - openshift


# for tagged commits make a tagged image, copy from stage -> prod
deploy-tags-image:
  stage: deploy
  environment:
    name: prod
  image: quay.io/skopeo/stable:v1.3.0 
  needs: ['pytest']
  tags:
    - openshift
  script:
    - | 
      skopeo copy \
        --src-creds "system-serviceaccount-${NAMESPACE}-pipeline:$PIPELINE_SA" \
        --dest-creds "system-serviceaccount-${NAMESPACE}-pipeline:$PIPELINE_SA" \
        "docker://${CLUSTER_REGISTRY_URL}/etl-toolkit-stage-eda-reader/${PROJECT_NAME}:${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHORT_SHA}" \
        "docker://${IMAGE_URL}:${CI_COMMIT_TAG}"
  only:
    - tags


deploy-stage-cron:
  stage: deploy
  environment:
    name: stage
  image: quay.io/openshift/origin-cli:4.8
  tags:
    - openshift
  script:
    - oc login --token=$PIPELINE_SA --server=$OC_API_SERVER
    - oc process -f hack/cronjob.yaml -p DEPLOY_NAMESPACE=$NAMESPACE -p IMAGE="${PROJECT_NAME}:latest" | oc apply -f -
  rules:
    - changes:
        - hack/cronjob.yaml


deploy-tags-cron:
  stage: deploy
  environment:
    name: prod
  image: quay.io/openshift/origin-cli:4.8
  needs: ['pytest']
  tags:
    - openshift
  script:
    - oc login --token=$PIPELINE_SA --server=$OC_API_SERVER
    - oc process -f hack/cronjob.yaml -p DEPLOY_NAMESPACE=$NAMESPACE -p IMAGE="${PROJECT_NAME}:${CI_COMMIT_TAG}" | oc apply -f -
  only:
    - tags
